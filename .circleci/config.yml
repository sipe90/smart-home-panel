# Define images and workspaces
node10: &node10
  working_directory: &workdir_node10 ~/node10
  docker:
    - image: circleci/node:10.14

# Branch and tag filters
tags_and_branches: &tags_and_branches
  filters:
    tags:
      only: /^v.*/

only_tags: &only_tags
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

# Items to persist from workspace
whitelist: &whitelist
  paths:
    - .git/*
    - node_modules/*
    - bin/*
    - src/*
    - test/*
    - public/*
    - package.json
    - package-lock.json
    - webpack.config.ts
    - tsconfig.json
    - jest.config.js
    - ecosystem.config.js

version: 2
jobs:
  install:
    <<: *node10
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-node_10.14-{{ .Branch }}-{{ checksum "package.json" }}
          - dependencies-node_10.14-{{ .Branch }}
          - dependencies-node_10.14
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-node_10.14-{{ .Branch }}-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: *workdir_node10
          <<: *whitelist
  test:
    <<: *node10
    steps:
      - attach_workspace:
          at: *workdir_node10
      - run: yarn test
  build:
    <<: *node10
    steps:
      - attach_workspace:
          at: *workdir_node10
      - run: yarn run build
  deploy:
    <<: *node10
    steps:
      - attach_workspace:
          at: *workdir_node10
      - run: sudo yarn add -g pm2
      - run: DEPLOY_BRANCH=$CIRCLE_TAG pm2 deploy production --force
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - install:
          <<: *tags_and_branches
      - test:
          <<: *tags_and_branches
          requires:
            - install
      - build:
          <<: *tags_and_branches
          requires:
            - install
      - confirm_deploy:
          <<: *only_tags
          type: approval
          requires:
           - build
           - test
      - deploy:
          <<: *only_tags
          requires:
            - confirm_deploy
